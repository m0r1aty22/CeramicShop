@model CeramicShop.Models.Product
@{
    ViewData["Title"] = "Chỉnh sửa sản phẩm";
    Layout = "_AdminLayout";
}

<div class="container-fluid">
    <!-- Breadcrumb, Debug Info -->
    <h1 class="mt-4">Chỉnh sửa sản phẩm</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Admin")">Bảng điều khiển</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index")">Sản phẩm</a></li>
        <li class="breadcrumb-item active">Chỉnh sửa</li>
    </ol>


    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-edit mr-1"></i> Thông tin sản phẩm
        </div>
        <div class="card-body">
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <form asp-action="Edit" enctype="multipart/form-data">
                @* Đã xóa novalidate để kiểm tra sau *@
                <input type="hidden" asp-for="ProductID" />
                <div asp-validation-summary="All" class="text-danger"></div>

                <div class="row">
                    <div class="col-md-8">
                        <div class="form-group">
                            <label asp-for="ProductName" class="control-label">Tên sản phẩm</label>
                            <input asp-for="ProductName" class="form-control" />
                            <span asp-validation-for="ProductName" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Description" class="control-label">Mô tả</label>
                            <textarea asp-for="Description" class="form-control" rows="6"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Price" class="control-label">Giá (VNĐ)</label>
                                    <input asp-for="Price" class="form-control" type="number" min="0" />
                                    <span asp-validation-for="Price" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="StockQuantity" class="control-label">Số lượng tồn kho</label>
                                    <input asp-for="StockQuantity" class="form-control" type="number" min="0" />
                                    <span asp-validation-for="StockQuantity" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Danh mục</label>
                                    <select class="form-control" id="categorySelect">
                                        <option value="">-- Chọn danh mục --</option>
                                        @if (ViewBag.Categories is IEnumerable<CeramicShop.Models.Category> categories)
                                        {
                                            foreach (var category in categories)
                                            {
                                                var isSelected = (ViewBag.SelectedCategoryID != null && (int)ViewBag.SelectedCategoryID == category.CategoryID);
                                                <option value="@category.CategoryID" selected="@isSelected">@category.CategoryName</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="SubCategoryID" class="control-label">Danh mục con</label>
                                    <select asp-for="SubCategoryID" class="form-control" asp-items="ViewBag.SubCategories" id="SubCategoryID">
                                        <option value="">-- Chọn danh mục con --</option>
                                    </select>
                                    <span asp-validation-for="SubCategoryID" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="form-group form-check">
                            <label class="form-check-label">
                                <input class="form-check-input" asp-for="IsActive" /> Kích hoạt
                            </label>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label">Thêm ảnh mới</label>
                            <div class="custom-file">
                                <input type="file" class="custom-file-input" id="productImages" name="newImages" multiple accept="image/*">
                                <label class="custom-file-label" for="productImages">Chọn ảnh...</label>
                            </div>
                            <small class="form-text text-muted">Có thể chọn nhiều ảnh.</small>
                        </div>
                        <div class="image-preview-container" id="imagePreviewContainer"></div>
                        <hr />
                        <div class="form-group">
                            <label>Ảnh hiện tại</label>
                            @{
                                var currentMainImageId = Model.ProductImages?.FirstOrDefault(i => i.IsMainImage)?.ProductImageID;
                            }
                            @* <input type="hidden" name="mainImageIdCurrent" value="@currentMainImageId" /> *@

                            @if (Model.ProductImages != null && Model.ProductImages.Any())
                            {
                                <div class="image-preview-container">
                                    @foreach (var image in Model.ProductImages)
                                    {
                                        <div class="image-preview-item">
                                            <img src="@Url.Content("~/Images/" + image.ImagePath)" alt="Thumbnail" />

                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input"
                                                       type="radio" name="mainImageIdCurrent"
                                                       id="mainImage-@image.ProductImageID"
                                                       value="@image.ProductImageID"
                                                @(image.IsMainImage ? "checked" : "") />
                                                <label class="form-check-label" for="mainImage-@image.ProductImageID">
                                                    Chính
                                                </label>
                                            </div>

                                            <div class="form-check">
                                                <input class="form-check-input"
                                                       type="checkbox" name="imagesToDelete"
                                                       id="deleteImage-@image.ProductImageID"
                                                       value="@image.ProductImageID" />
                                                <label class="form-check-label" for="deleteImage-@image.ProductImageID">
                                                    Xóa
                                                </label>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">Chưa có ảnh nào.</p>
                            }
                        </div>
                    </div>
                </div>

                <div class="form-group mt-3">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save mr-1"></i> Lưu
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left mr-1"></i> Quay lại
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {

            // --- Phần xử lý ảnh ---
            $('.custom-file-input').on('change', function () {
                const fileCount = this.files.length;
                const label = $(this).next('.custom-file-label');
                label.html(fileCount > 1 ? `${fileCount} files selected` : this.value.split('\\').pop());
                const previewContainer = $('#imagePreviewContainer');
                previewContainer.empty();
                if (this.files && this.files.length > 0) {
                    for (let i = 0; i < this.files.length; i++) {
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            previewContainer.append(
                                `<div class="preview-item">
                                    <img src="${e.target.result}" alt="Preview" style="max-width: 100px; max-height: 100px; margin: 5px;" />
                                </div>`
                            );
                        }
                        reader.readAsDataURL(this.files[i]);
                    }
                }
            });

            // --- Phần xử lý Category/SubCategory Dropdowns ---
            const initialSubCategoryID = $('#SubCategoryID').val();
            const initialCategoryID = $('#categorySelect').val();

            function loadSubCategories(categoryId, selectedSubCategoryId) {
                const subCategorySelect = $('#SubCategoryID');
                subCategorySelect.prop('disabled', true).empty().append('<option value="">-- Đang tải... --</option>');
                if (categoryId) {
                    $.ajax({
                        url: '@Url.Action("GetSubCategories", "AdminProduct")',
                        type: 'GET',
                        data: { categoryId: categoryId },
                        success: function (data) {
                            console.log('Received subcategories:', data);
                            subCategorySelect.empty().append('<option value="">-- Chọn danh mục con --</option>');
                            $.each(data, function (index, item) {
                                subCategorySelect.append(`<option value="${item.id}">${item.name}</option>`);
                            });
                            if (selectedSubCategoryId) {
                                subCategorySelect.val(selectedSubCategoryId);
                                console.log('Reselected subcategory:', selectedSubCategoryId);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error loading subcategories:', error);
                            subCategorySelect.empty().append('<option value="">-- Lỗi tải --</option>');
                            alert('Lỗi khi tải danh mục con: ' + error);
                        },
                        complete: function() {
                             subCategorySelect.prop('disabled', false);
                        }
                    });
                } else {
                     subCategorySelect.empty().append('<option value="">-- Chọn danh mục con --</option>');
                     subCategorySelect.prop('disabled', false);
                }
            }

            $('#categorySelect').on('change', function () {
                const categoryId = $(this).val();
                console.log('Category changed by user to:', categoryId);
                loadSubCategories(categoryId, null);
            });

            if (initialCategoryID) {
                console.log('Initial load - CategoryID:', initialCategoryID, 'SubCategoryID:', initialSubCategoryID);
                loadSubCategories(initialCategoryID, initialSubCategoryID);
            } else {
                 $('#SubCategoryID').prop('disabled', false);
            }

            // === THÊM VÀO ĐÂY: Xử lý nút Đặt làm ảnh chính bằng AJAX ===
            $(document).on('click', '.btn-set-main-image', function() {
                var $button = $(this);
                var productId = $button.data('product-id');
                var imageId = $button.data('image-id');

                var token = $('form[asp-action="Edit"] input[name="__RequestVerificationToken"]').val();
                if (!token) { // Nếu không tìm thấy trong form Edit, thử tìm trong form Delete (nếu có)
                     token = $('form[asp-action="Delete"] input[name="__RequestVerificationToken"]').val();
                }
                if (!token) { // Hoặc tìm trong một thẻ meta nếu bạn có cấu hình
                     token = $('meta[name="x-csrf-token"]').attr('content');
                }
                 if (!token) {
                     console.warn("Không tìm thấy AntiForgery Token để gửi kèm AJAX SetMainImage. Yêu cầu có thể bị từ chối.");
                 }


                console.log('Setting main image via AJAX. ProductID:', productId, 'ImageID:', imageId, 'Token:', token);

                $button.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');

                $.ajax({
                    url: '@Url.Action("SetMainImage", "AdminProduct")',
                    type: 'POST',
                    data: {
                        id: productId,      // Tên tham số phải khớp với Action: 'id' cho ProductID
                        imageId: imageId    // Tên tham số phải khớp với Action: 'imageId'
                    },
                    headers: {
                        // Gửi kèm AntiForgery Token nếu có
                        'RequestVerificationToken': token
                    },
                    success: function(response) {
                        console.log('SetMainImage AJAX success:', response);
                        window.location.reload();
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        console.error('SetMainImage AJAX error:', textStatus, errorThrown, jqXHR.responseText);
                        alert('Đã xảy ra lỗi khi đặt ảnh chính. Chi tiết: ' + (jqXHR.responseJSON ? jqXHR.responseJSON.message : errorThrown));
                        $button.prop('disabled', false).html('<i class="fas fa-star"></i>');
                    }
                });
            });
        });
    </script>
}